/*
 * This file is generated by jOOQ.
 */
package ch.countryname.countrygame.db.tables.records


import ch.countryname.countrygame.db.tables.Modifier

import java.lang.Double
import java.lang.Integer
import java.lang.String

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record3
import org.jooq.Row3
import org.jooq.impl.UpdatableRecordImpl


class ModifierRecord extends UpdatableRecordImpl[ModifierRecord](Modifier.MODIFIER) with Record3[Integer, String, Double] {

  def setModifierid(value : Integer) : Unit = {
    set(0, value)
  }

  def getModifierid : Integer = {
    val r = get(0)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  def setModifiername(value : String) : Unit = {
    set(1, value)
  }

  def getModifiername : String = {
    val r = get(1)
    if (r == null) null else r.asInstanceOf[String]
  }

  def setModifiervalue(value : Double) : Unit = {
    set(2, value)
  }

  def getModifiervalue : Double = {
    val r = get(2)
    if (r == null) null else r.asInstanceOf[Double]
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------
  override def key : Record1[Integer] = {
    return super.key.asInstanceOf[ Record1[Integer] ]
  }

  // -------------------------------------------------------------------------
  // Record3 type implementation
  // -------------------------------------------------------------------------

  override def fieldsRow : Row3[Integer, String, Double] = {
    super.fieldsRow.asInstanceOf[ Row3[Integer, String, Double] ]
  }

  override def valuesRow : Row3[Integer, String, Double] = {
    super.valuesRow.asInstanceOf[ Row3[Integer, String, Double] ]
  }
  override def field1 : Field[Integer] = Modifier.MODIFIER.MODIFIERID
  override def field2 : Field[String] = Modifier.MODIFIER.MODIFIERNAME
  override def field3 : Field[Double] = Modifier.MODIFIER.MODIFIERVALUE
  override def component1 : Integer = getModifierid
  override def component2 : String = getModifiername
  override def component3 : Double = getModifiervalue
  override def value1 : Integer = getModifierid
  override def value2 : String = getModifiername
  override def value3 : Double = getModifiervalue

  override def value1(value : Integer) : ModifierRecord = {
    setModifierid(value)
    this
  }

  override def value2(value : String) : ModifierRecord = {
    setModifiername(value)
    this
  }

  override def value3(value : Double) : ModifierRecord = {
    setModifiervalue(value)
    this
  }

  override def values(value1 : Integer, value2 : String, value3 : Double) : ModifierRecord = {
    this.value1(value1)
    this.value2(value2)
    this.value3(value3)
    this
  }

  def this(modifierid : Integer, modifiername : String, modifiervalue : Double) = {
    this()

    set(0, modifierid)
    set(1, modifiername)
    set(2, modifiervalue)
  }
}
