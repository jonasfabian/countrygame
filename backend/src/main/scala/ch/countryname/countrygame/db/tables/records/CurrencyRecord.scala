/*
 * This file is generated by jOOQ.
 */
package ch.countryname.countrygame.db.tables.records


import ch.countryname.countrygame.db.tables.Currency

import java.lang.Integer
import java.lang.String

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record4
import org.jooq.Row4
import org.jooq.impl.UpdatableRecordImpl


class CurrencyRecord extends UpdatableRecordImpl[CurrencyRecord](Currency.CURRENCY) with Record4[Integer, String, Integer, Integer] {

  def setCurrencyid(value : Integer) : Unit = {
    set(0, value)
  }

  def getCurrencyid : Integer = {
    val r = get(0)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  def setCurrencyname(value : String) : Unit = {
    set(1, value)
  }

  def getCurrencyname : String = {
    val r = get(1)
    if (r == null) null else r.asInstanceOf[String]
  }

  def setCurrencycountryid(value : Integer) : Unit = {
    set(2, value)
  }

  def getCurrencycountryid : Integer = {
    val r = get(2)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  def setCurrencycountryname(value : Integer) : Unit = {
    set(3, value)
  }

  def getCurrencycountryname : Integer = {
    val r = get(3)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------
  override def key : Record1[Integer] = {
    return super.key.asInstanceOf[ Record1[Integer] ]
  }

  // -------------------------------------------------------------------------
  // Record4 type implementation
  // -------------------------------------------------------------------------

  override def fieldsRow : Row4[Integer, String, Integer, Integer] = {
    super.fieldsRow.asInstanceOf[ Row4[Integer, String, Integer, Integer] ]
  }

  override def valuesRow : Row4[Integer, String, Integer, Integer] = {
    super.valuesRow.asInstanceOf[ Row4[Integer, String, Integer, Integer] ]
  }
  override def field1 : Field[Integer] = Currency.CURRENCY.CURRENCYID
  override def field2 : Field[String] = Currency.CURRENCY.CURRENCYNAME
  override def field3 : Field[Integer] = Currency.CURRENCY.CURRENCYCOUNTRYID
  override def field4 : Field[Integer] = Currency.CURRENCY.CURRENCYCOUNTRYNAME
  override def component1 : Integer = getCurrencyid
  override def component2 : String = getCurrencyname
  override def component3 : Integer = getCurrencycountryid
  override def component4 : Integer = getCurrencycountryname
  override def value1 : Integer = getCurrencyid
  override def value2 : String = getCurrencyname
  override def value3 : Integer = getCurrencycountryid
  override def value4 : Integer = getCurrencycountryname

  override def value1(value : Integer) : CurrencyRecord = {
    setCurrencyid(value)
    this
  }

  override def value2(value : String) : CurrencyRecord = {
    setCurrencyname(value)
    this
  }

  override def value3(value : Integer) : CurrencyRecord = {
    setCurrencycountryid(value)
    this
  }

  override def value4(value : Integer) : CurrencyRecord = {
    setCurrencycountryname(value)
    this
  }

  override def values(value1 : Integer, value2 : String, value3 : Integer, value4 : Integer) : CurrencyRecord = {
    this.value1(value1)
    this.value2(value2)
    this.value3(value3)
    this.value4(value4)
    this
  }

  def this(currencyid : Integer, currencyname : String, currencycountryid : Integer, currencycountryname : Integer) = {
    this()

    set(0, currencyid)
    set(1, currencyname)
    set(2, currencycountryid)
    set(3, currencycountryname)
  }
}
